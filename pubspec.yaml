name: ddip
description: "캠퍼스 실시간 현장 정보 거래 어플"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # intl 패키지는 날짜, 시간, 숫자 및 메시지의 국제화를 지원
  intl: ^0.17.0
  # Firebase 핵심 기능과 메시징 패키지를 추가
  firebase_core: ^3.1.1
  firebase_messaging: ^15.0.2
  # 카메라 기능
  camera: ^0.11.2
  # 상태 관리 및 의존성 주입
  flutter_riverpod: ^2.5.1
  # 네트워크 통신
  dio: ^5.4.3+1
  # 라우팅
  go_router: ^14.1.0
  # 데이터 모델 클래스 자동 생성
  freezed_annotation: ^2.4.1
  json_annotation: ^4.9.0
  # 지도 기능 구현
  flutter_naver_map: ^1.4.0
  # GPS 사용을 위한 패키지
  geolocator: ^12.0.0
  # 이 패키지는 FCM이나 외부 서버 없이 앱 자체적으로 사용자에게 알림을 보낼 수 있게 해줍니다.
  flutter_local_notifications: ^17.1.2
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  uuid: ^4.5.1
  flutter_dotenv: ^5.2.1
  # 원형 프로그레스 바 UI를 위한 패키지 추가
  percent_indicator: ^4.2.3
  riverpod_annotation: ^2.3.5


dev_dependencies:
  flutter_test:
    sdk: flutter
  change_app_package_name: ^1.1.0
  # 코드 생성기
  build_runner: ^2.4.9
  freezed: ^2.5.2
  json_serializable: ^6.8.0
  # 코드 스타일 강제
  lint: ^2.3.0
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  riverpod_generator: ^2.4.0


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - .env
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
